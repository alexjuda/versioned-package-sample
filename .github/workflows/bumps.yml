name: Bumps-v2
on: 
  workflow_dispatch:
    inputs:
      manual_version: 
        description: Manually selected new project version. If not passed, the workflow will read current version and bump the minor.
        required: false
jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Infer new version
        run: |
          MANUAL_VERSION="${{ github.event.inputs.manual_version }}"
          if [ -n "$MANUAL_VERSION" ]; then
            NEW_VERSION="$MANUAL_VERSION"
          else
            VERSION_PATH="${{ github.workspace }}/VERSION"

            MAJOR=$(sed -r 's/^([0-9]+)\.([0-9]+)\.([0-9]+)(-.+)?$/\1/' $VERSION_PATH)
            MINOR=$(sed -r 's/^([0-9]+)\.([0-9]+)\.([0-9]+)(-.+)?$/\2/' $VERSION_PATH)
            PATCH=$(sed -r 's/^([0-9]+)\.([0-9]+)\.([0-9]+)(-.+)?$/\3/' $VERSION_PATH)
            DEV=$(sed -r 's/^([0-9]+)\.([0-9]+)\.([0-9]+)(-.+)?$/\4/' $VERSION_PATH)

            echo "current version is $MAJOR.$MINOR.$PATCH$DEV"

            NEW_VERSION="$MAJOR.$(expr $MINOR + 1).$PATCH"
          fi

          # special github syntax for setting step outputs
          # see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
          echo "::set-output name=NEW_VERSION::$NEW_VERSION"

      - name: Commit & push bumped version
        run: |
          NEW_VERSION="${INPUT_NEW_VERSION}"
          echo "after the bump this will be '$NEW_VERSION'"
          # VERSION_PATH="${{ github.workspace }}/VERSION"
          # echo $NEW_VERSION > $VERSION_PATH

          # git config --local user.email "action@github.com"
          # git config --local user.name "Github Action on behalf of ${{ github.actor }}"
          # git add $VERSION_PATH
          # git commit -m "Bump version"
          # git push
